-- MySQL Script generated by MySQL Workbench
-- Thu Nov  2 19:50:10 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;

USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `userID` INT NOT NULL,
  `username` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;

INSERT INTO `mydb`.`User` (`userID`, `username`, `email`, `password`)
VALUES 
(1, 'john_doe', 'john@example.com', 'password123'),
(2, 'jane_doe', 'jane@example.com', 'password456'),
(3, 'bob_smith', 'bob@example.com', 'password789'),
(4, 'mary_jones', 'mary@example.com', 'passwordabc'),
(5, 'sam_wilson', 'sam@example.com', 'passworddef'),
(6, 'lisa_davis', 'lisa@example.com', 'passwordghi');

-- -----------------------------------------------------
-- Table `mydb`.`pencariKost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pencariKost` (
  `UserID` INT NOT NULL,
  `phoneNumber` VARCHAR(45) NULL,
  `gender` VARCHAR(45) NULL,
  INDEX `fk_pencariKost_User_idx` (`UserID` ASC) VISIBLE,
  PRIMARY KEY (`UserID`),
  CONSTRAINT `fk_pencariKost_User`
    FOREIGN KEY (`UserID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`pencariKost` (`UserID`, `phoneNumber`, `gender`)
VALUES 
(1, '1234567890', 'Male'),
(2, '0987654321', 'Female'),
(3, '5555555555', 'Male');

-- -----------------------------------------------------
-- Table `mydb`.`Admin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Admin` (
  `UserID` INT NOT NULL,
  `role` VARCHAR(45) NULL,
  PRIMARY KEY (`UserID`),
  CONSTRAINT `fk_Admin_User1`
    FOREIGN KEY (`UserID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`Admin` (`UserID`, `role`)
VALUES 
(4, 'Administrator');

-- -----------------------------------------------------
-- Table `mydb`.`PemilikKost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PemilikKost` (
  `User_userID` INT NOT NULL,
  `phoneNumber` INT NULL,
  `address` VARCHAR(45) NULL,
  PRIMARY KEY (`User_userID`),
  CONSTRAINT `fk_PemilikKost_User1`
    FOREIGN KEY (`User_userID`)
    REFERENCES `mydb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`PemilikKost` (`User_userID`, `phoneNumber`, `address`)
VALUES 
(5, 123456789, '123 Main Street'),
(6, 987654321, '456 Oak Avenue');

-- -----------------------------------------------------
-- Table `mydb`.`ChatList`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `mydb`.`ChatList` (
  `chatListID` INT NOT NULL,
  `pencariKostID` INT NULL,
  `adminID` INT NULL,
  `pemilikID` INT NULL,
  PRIMARY KEY (`chatListID`),
  INDEX `fk_ChatList_pencariKost1_idx` (`pencariKostID` ASC) VISIBLE,
  INDEX `fk_ChatList_Admin1_idx` (`adminID` ASC) VISIBLE,
  INDEX `fk_ChatList_PemilikKost1_idx` (`pemilikID` ASC) VISIBLE,
  CONSTRAINT `fk_ChatList_pencariKost1`
    FOREIGN KEY (`pencariKostID`)
    REFERENCES `mydb`.`pencariKost` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ChatList_Admin1`
    FOREIGN KEY (`adminID`)
    REFERENCES `mydb`.`Admin` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ChatList_PemilikKost1`
    FOREIGN KEY (`pemilikID`)
    REFERENCES `mydb`.`PemilikKost` (`User_userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`ChatList` (`chatListID`, `pencariKostID`, `adminID`, `pemilikID`)
VALUES 
(1, 1, 4, NULL),
(2, 3, NULL, 5),
(3, NULL, 4, 6),
(4, 2, 5, NULL),
(5, NULL, 6, 5),
(6, 3, NULL, 6);

-- -----------------------------------------------------
-- Table `mydb`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Message` (
  `chatID` INT NOT NULL,
  `chatListID` INT NOT NULL,
  `senderID` INT NULL,
  `content` VARCHAR(45) NULL,
  `timestamp` VARCHAR(45) NULL,
  PRIMARY KEY (`chatID`),
  INDEX `fk_Message_ChatList1_idx` (`chatListID` ASC) VISIBLE,
  CONSTRAINT `fk_Message_ChatList1`
    FOREIGN KEY (`chatListID`)
    REFERENCES `mydb`.`ChatList` (`chatListID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`Message` (`chatID`, `chatListID`, `senderID`, `content`, `timestamp`)
VALUES 
(1, 1, 1, 'Hello John!', '2023-11-02 12:30:45'),
(2, 1, 4, 'Hi there!', '2023-11-02 12:35:20'),
(3, 2, 3, 'Hey Jane!', '2023-11-02 13:05:10'),
(4, 2, 5, 'Hi Sam!', '2023-11-02 13:10:15'),
(5, 3, 4, 'Hello Bob!', '2023-11-02 14:00:30'),
(6, 3, 6, 'Hi Lisa!', '2023-11-02 14:05:25');

-- -----------------------------------------------------
-- Table `mydb`.`Kost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Kost` (
  `kostID` INT NOT NULL,
  `userID` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `kostAddress` VARCHAR(45) NULL,
  `roomList` VARCHAR(45) NULL,
  PRIMARY KEY (`kostID`),
  INDEX `fk_Kost_PemilikKost1_idx` (`userID` ASC) VISIBLE,
  CONSTRAINT `fk_Kost_PemilikKost1`
    FOREIGN KEY (`userID`)
    REFERENCES `mydb`.`PemilikKost` (`User_userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`Kost` (`kostID`, `userID`, `name`, `kostAddress`, `roomList`)
VALUES 
(1, 5, 'Cozy Residence', '123 Oak Street', 'Single Room, Double Room, Suite'),
(2, 6, 'Sunset Apartments', '456 Pine Avenue', 'Studio, One Bedroom, Two Bedroom'),
(3, 4, 'Urban Retreat', '789 Maple Drive', 'Shared Dormitory, Private Room'),
(4, 5, 'Harbor View Suites', '101 Harbor Road', 'Deluxe Suite, Executive Suite'),
(5, 6, 'Garden Oasis', '202 Rose Lane', 'Single Room, Twin Room, Garden Suite');

-- -----------------------------------------------------
-- Table `mydb`.`Kamar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Kamar` (
  `roomID` INT NOT NULL,
  `kostID` INT NOT NULL,
  `roomPhoto` VARCHAR(45) NULL,
  `price` INT NULL,
  `facility` VARCHAR(45) NULL,
  `category` VARCHAR(45) NULL,
  PRIMARY KEY (`roomID`),
  INDEX `fk_Kamar_Kost1_idx` (`kostID` ASC) VISIBLE,
  CONSTRAINT `fk_Kamar_Kost1`
    FOREIGN KEY (`kostID`)
    REFERENCES `mydb`.`Kost` (`kostID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`Kamar` (`roomID`, `kostID`, `roomPhoto`, `price`, `facility`, `category`)
VALUES 
(1, 1, 'room1.jpg', 500, 'WiFi, AC, TV', 'Single Room'),
(2, 1, 'room2.jpg', 600, 'WiFi, AC, TV, Private Bathroom', 'Double Room'),
(3, 2, 'room3.jpg', 700, 'WiFi, AC, TV', 'Studio'),
(4, 2, 'room4.jpg', 800, 'WiFi, AC, TV, Balcony', 'One Bedroom'),
(5, 3, 'room5.jpg', 400, 'WiFi, Fan', 'Shared Dormitory'),
(6, 3, 'room6.jpg', 300, 'Fan', 'Private Room');

-- -----------------------------------------------------
-- Table `mydb`.`Pembayaran`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Pembayaran` (
  `paymentID` INT NOT NULL,
  `UserID` INT NOT NULL,
  `paymentDate` VARCHAR(45) NULL,
  `paymentMethod` VARCHAR(45) NULL,
  `paymentTotal` INT NULL,
  PRIMARY KEY (`paymentID`),
  INDEX `fk_Pembayaran_pencariKost1_idx` (`UserID` ASC) VISIBLE,
  CONSTRAINT `fk_Pembayaran_pencariKost1`
    FOREIGN KEY (`UserID`)
    REFERENCES `mydb`.`pencariKost` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`Pembayaran` (`paymentID`, `UserID`, `paymentDate`, `paymentMethod`, `paymentTotal`)
VALUES 
(1, 1, '2023-11-02', 'Credit Card', 500),
(2, 3, '2023-11-03', 'PayPal', 600),
(3, 3, '2023-11-04', 'Bank Transfer', 700),
(4, 5, '2023-11-05', 'Cash', 800),
(5, 5, '2023-11-06', 'Venmo', 400),
(6, 1, '2023-11-07', 'Google Pay', 300);

-- -----------------------------------------------------
-- Table `mydb`.`Booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Booking` (
  `bookingID` INT NOT NULL,
  `UserID` INT NOT NULL,
  `roomID` INT NOT NULL,
  `paymentID` INT NOT NULL,
  `entryDate` VARCHAR(45) NULL,
  `outDate` VARCHAR(45) NULL,
  `paymentStatus` VARCHAR(45) NULL,
  PRIMARY KEY (`bookingID`),
  INDEX `fk_Booking_Pembayaran1_idx` (`paymentID` ASC) VISIBLE,
  INDEX `fk_Booking_pencariKost1_idx` (`UserID` ASC) VISIBLE,
  INDEX `fk_Booking_Kamar1_idx` (`roomID` ASC) VISIBLE,
  CONSTRAINT `fk_Booking_Pembayaran1`
    FOREIGN KEY (`paymentID`)
    REFERENCES `mydb`.`Pembayaran` (`paymentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Booking_pencariKost1`
    FOREIGN KEY (`UserID`)
    REFERENCES `mydb`.`pencariKost` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Booking_Kamar1`
    FOREIGN KEY (`roomID`)
    REFERENCES `mydb`.`Kamar` (`roomID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO `mydb`.`Booking` (`bookingID`, `UserID`, `roomID`, `paymentID`, `entryDate`, `outDate`, `paymentStatus`)
VALUES 
(1, 1, 1, 1, '2023-11-02', '2023-11-07', 'Paid'),
(2, 3, 2, 2, '2023-11-03', '2023-11-08', 'Paid'),
(3, 2, 3, 3, '2023-11-04', '2023-11-09', 'Paid'),
(4, 4, 4, 4, '2023-11-05', '2023-11-10', 'Paid'),
(5, 5, 5, 5, '2023-11-06', '2023-11-11', 'Paid'),
(6, 6, 6, 6, '2023-11-07', '2023-11-12', 'Paid');

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

SHOW TABLES;